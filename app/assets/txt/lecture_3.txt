git status                    # should display nothing to commit
git checkout -b user_model    # checkout a new branch
git branch                    # view branches


~/# rails generate scaffold User name:string email:string --skip-helper
~/# bundle exec rake db:migrate
~/# bundle exec rake db:test:prepare
~/# rails s

~/# rails console

~/# User.new
~/# user = User.new(name: "Matt", email: "mg343@cornell.edu")
~/# user.save
~/# user
~/# user.name 
~/# user.email
~/# user.updated_at
~/# User.create(name: "A Nother", email: "another@example.org")
~/# foo = User.create(name: "Foo", email: "foo@bar.com")
~/# User.count
~/# foo.destroy
~/# foo
~/# User.count
~/# User.find(1)
~/# User.find(3)
~/# User.find_by_id(3)
~/# User.find_by_email('mg343@cornell.edu')
~/# User.find_by_name('Matt')
~/# User.all
~/# User.first
~/# User.last
~/# User.all.each { |u| puts u.name }
~/# user.email
~/# user.email = "goggin@example.com"
~/# user.save
~/# user.email = "williamson@example.com"
~/# user.reload.email 
~/# user.update_attributes(name: "The Dude", email: "dude@abides.org")
~/# user.update_attributes(created_at: "2003-01-30 23:54:42 +0000")
~/# User.create(name: "", email: "")


--------------------app/models/user.rb
class User < ActiveRecord::Base
  attr_accessible :email, :name
  validates :name, presence: true
  validates :email, presence: true
end
--------------------------------------------------------------------------------


~/# rails console
~/# user = User.new(name: "", email: "mg343@cornell.edu")
~/# user.save
~/# user.valid?
~/# user.errors.full_messages

~/# bundle exec rspec spec/models/user_spec.rb

--------------------spec/models/user_spec.rb
require 'spec_helper'

describe User do

  before do
    @user = User.new(name: "Example User", 
                     email: "user@example.com")
  end

  describe "with valid attributes" do
    
    it "should be valid" do
      @user.should be_valid
    end
  end
  
  describe "without a name" do
    
    before do
      @user.name = ""
    end
    
    it "should not be valid" do
      @user.should_not be_valid
    end
  end
  
  describe "without an email" do
    
    before do
      @user.email = ""
    end
  
    it "should not be valid" do
      @user.should_not be_valid
    end    
  end
end
--------------------------------------------------------------------------------


~/# bundle exec rspec spec/models/user_spec.rb


--------------------app/models/user.rb
class User < ActiveRecord::Base
  attr_accessible :email, :name
  
  validates :name, presence: true,
                      length: { minimum: 4, maximum: 50 }

  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
  validates :email, presence: true,
                        format: { with: VALID_EMAIL_REGEX },
                      uniqueness: { case_sensitive: false }
end
--------------------------------------------------------------------------------


# Just replace the valid_attributes function with this code
--------------------spec/controllers/users_controller_spec.rb
def valid_attributes
  { "name" => "MyString", "email" => "mystring@example.com" }
end
--------------------------------------------------------------------------------

~/# bundle exec rspec spec/models/user_spec.rb
~/# bundle exec rspec 

~/# git status        # see what we modified
~/# git add -A        # add all the changes
~/# git commit -m "User model"

# merge it back into master
~/# git checkout master
~/# git merge user_model

~/# git push origin master    # github
~/# git push heroku master    # heroku

# we also need to run the migrations on heroku
heroku run rake db:migrate



